services:
  authorization_server_db:
    container_name: "authorization_server_db"
    image: postgres:16.1
    restart: always
    environment:
      POSTGRES_USER: "${DB_USERNAME}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_DB: "${DB_NAME}"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - "${SSO_STORE_PATH}/pgdata:/var/lib/postgresql/data/pgdata"
  session_cache:
    container_name: "redis_session_cache"
    image: redis:7.2.4
    restart: always
    command: redis-server --requirepass "${REDIS_PASSWORD}"
  authorization_server:
    container_name: "oauth2_authorization_server"
    image: oauth2/authorization-server:1.0
    restart: always
    depends_on:
      - authorization_server_db
      - session_cache
    environment:
      DATASOURCE_URL: "jdbc:postgresql://${DB_ADDRESS}/${DB_NAME}"
      DATASOURCE_USERNAME: "${DB_USERNAME}"
      DATASOURCE_PASSWORD: "${DB_PASSWORD}"
      OAUTH2_CLIENT_ID: "${OAUTH2_CLIENT_ID}"
      OAUTH2_CLIENT_SECRET: "${OAUTH2_CLIENT_SECRET}"
      REDIS_HOST: "${REDIS_HOST}"
      REDIS_PORT: "${REDIS_PORT}"
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
      BASE_URL: "${BASE_URL}"
      TRUSTSTORE_PATH: "/app/certs/truststore.p12"
      TRUSTSTORE_PASSWORD: "${TRUSTSTORE_PASSWORD}"
    links:
      - authorization_server_db:postgreshost
      - session_cache:redishost
    volumes:
      - "${SSO_STORE_PATH}/certs/cert.p12:/app/certs/truststore.p12"
  gateway:
    container_name: "nginx_gateway"
    image: nginx:1.24.0
    restart: always
    depends_on:
      - authorization_server
    ports:
      - 9009:9009
    volumes:
      - "${SSO_STORE_PATH}/certs:/home/certs"
      - "${SSO_STORE_PATH}/nginx-gateway/conf.d:/etc/nginx/conf.d"
    links:
      - authorization_server:ssohost